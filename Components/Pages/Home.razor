@page "/ar"
@page "/en"
@page "/"


@inject IRecruitmentService _recruitmentService
@inject NavigationManager _navManager



<div class="col-lg-12">
    <div class="card mb-3 p-3">
        <div class="row g-0">
            <div class="col-md-3 text-center ">
                <img src="/Logo.webp" class="img-fluid rounded-start m-auto" />
            </div>
            <div class="col-md-9">
                
            </div>
        </div>
    </div>
</div>
<div class="row g-3">
    @if (Recruitments != null)
    {
        @foreach (var recruitment in Recruitments)
        {
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body text-center ">
                        <h5 class="card-title">@recruitment.Value</h5>
                        <button @onclick=@(() =>ViewPosition(recruitment.Id)) class="text-center btn btn-primary">View Position</button>
                    </div>
                </div>
            </div>
        }
    }
</div>
@code {
    public string JobSearch { get; set; }
    public List<KeyValue> Categories { get; set; }
    public List<KeyValue> Recruitments { get; set; }
    // [Parameter]
    public string? lang { get; set; }
    protected async override Task OnInitializedAsync()
    {
        lang = _navManager.Uri.Contains("en") ? "en" : "ar";

        // if (string.IsNullOrEmpty(lang))
        // {
        //     _navManager.NavigateTo($"/ar");
        // }

        Recruitments = await _recruitmentService.GetAvailableRecruitments();
        await base.OnInitializedAsync();
    }
    protected override void OnParametersSet()
    {
        base.OnParametersSet();
    }
    public void ViewPosition(decimal departmentPositionId)
    {
        
        var link = _recruitmentService.GenerateRecruitmentLink(departmentPositionId);
        _navManager.NavigateTo($"/{lang}/RecruitmentInfo/{link}");
    }
}
