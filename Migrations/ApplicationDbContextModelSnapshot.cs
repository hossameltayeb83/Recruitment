// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Recruitment.Data;

#nullable disable

namespace Recruitment.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("Recruitment.Models.Applicant", b =>
                {
                    b.Property<decimal>("ApiApplicantId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("ApplicantNotes")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("CV")
                        .HasColumnType("TEXT");

                    b.Property<string>("CvFileName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DoctorDegreeDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ErpAreaCityID")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ErpBranchID")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ErpDepartmentPositionID")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ErpDoctorDegreeID")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ErpMartialStatusID")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ErpMilitryStatusID")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ErpOtherSpecialtyID")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ErpSpecialtyID")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ErpUniversityID")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("GenderID")
                        .HasColumnType("TEXT");

                    b.Property<int?>("GraduationYear")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDoctor")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("SentToErp")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ThirdName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("ApiApplicantId");

                    b.ToTable("Applicants");
                });

            modelBuilder.Entity("Recruitment.Models.AreaCity", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasParent")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ValueAr")
                        .HasColumnType("TEXT");

                    b.Property<string>("ValueEn")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AreaCities");
                });

            modelBuilder.Entity("Recruitment.Models.Branch", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasParent")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ValueAr")
                        .HasColumnType("TEXT");

                    b.Property<string>("ValueEn")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("Recruitment.Models.DoctorDegree", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasParent")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ValueAr")
                        .HasColumnType("TEXT");

                    b.Property<string>("ValueEn")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DoctorDegrees");
                });

            modelBuilder.Entity("Recruitment.Models.Gender", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasParent")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ValueAr")
                        .HasColumnType("TEXT");

                    b.Property<string>("ValueEn")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("Recruitment.Models.MartialStatus", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasParent")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ValueAr")
                        .HasColumnType("TEXT");

                    b.Property<string>("ValueEn")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MartialStatuses");
                });

            modelBuilder.Entity("Recruitment.Models.MilitaryStatus", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasParent")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ValueAr")
                        .HasColumnType("TEXT");

                    b.Property<string>("ValueEn")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MilitaryStatuses");
                });

            modelBuilder.Entity("Recruitment.Models.Recruitment", b =>
                {
                    b.Property<decimal>("ErpDepartmentPositionID")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDoctor")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LinkExpiryDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("OrganizationMission")
                        .HasColumnType("TEXT");

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OrganizationVision")
                        .HasColumnType("TEXT");

                    b.Property<string>("PositionDetails")
                        .HasColumnType("TEXT");

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PositionRequirements")
                        .HasColumnType("TEXT");

                    b.Property<string>("PositionSummary")
                        .HasColumnType("TEXT");

                    b.HasKey("ErpDepartmentPositionID");

                    b.ToTable("Recruitments");
                });

            modelBuilder.Entity("Recruitment.Models.Speciality", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasParent")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ValueAr")
                        .HasColumnType("TEXT");

                    b.Property<string>("ValueEn")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Specialities");
                });

            modelBuilder.Entity("Recruitment.Models.University", b =>
                {
                    b.Property<decimal>("Id")
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasParent")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ValueAr")
                        .HasColumnType("TEXT");

                    b.Property<string>("ValueEn")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Universities");
                });
#pragma warning restore 612, 618
        }
    }
}
